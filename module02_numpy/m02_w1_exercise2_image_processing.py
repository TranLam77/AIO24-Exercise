# -*- coding: utf-8 -*-
"""M02_W1_Exercise2_Image_processing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tRc2_7fX8J444QV1jXBGQcRHFpNlpd-K

# Question 12
"""

# Download image
#! gdown 1i9dqan21DjQoG5Q_VEvm0LrVwAlXD0vB

import matplotlib.image as mpimg
import matplotlib.pyplot as plt
import numpy as np

img_path = './dog.jpeg'
def lightness_function(vector):
    return np.min(vector)*0.5 + np.max(vector)*0.5
img = mpimg.imread(img_path)
print(img[0,0])
gray_img_01 = np.apply_along_axis(lightness_function, axis=2, arr=img)
gray_img_01[0, 0]
plt.imshow(gray_img_01, cmap = plt.get_cmap('gray'))

"""# Question 13"""

# Download image
#! gdown 1i9dqan21DjQoG5Q_VEvm0LrVwAlXD0vB

import matplotlib.image as mpimg
import matplotlib.pyplot as plt
import numpy as np

def average_function(vector):
    return (np.mean(vector))

img = mpimg.imread(img_path)
print(img[0,0])
gray_img_02 = np.apply_along_axis(average_function, axis=2, arr=img)
gray_img_02[0, 0].round(1)
plt.imshow(gray_img_02, cmap = plt.get_cmap('gray'))

"""# Question 14"""

# Download image
#! gdown 1i9dqan21DjQoG5Q_VEvm0LrVwAlXD0vB

import matplotlib.image as mpimg
import matplotlib.pyplot as plt
import numpy as np

def luminosity_function(vector):
    return (0.21*vector[0] + 0.72*vector[1] + 0.07*vector[2])

img = mpimg.imread(img_path)
print(img[0,0])
gray_img_03 = np.apply_along_axis(luminosity_function, axis=2, arr=img)
print(gray_img_03[0, 0].round(1))
plt.imshow(gray_img_03, cmap = plt.get_cmap('gray'))